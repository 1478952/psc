// Play
/*
$(function () {
	$( ".datepk" ).datep(); // 달력
	$("#content").mCustomScrollbar({
		scrollButtons:{enable:false},
		theme:"minimal-dark",
		mouseWheelPixels: 300,
		advanced:{
            updateOnContentResize: true
        }
		//scrollbarPosition:"outside"
	});

});
*/
/**
 * document가 로드될때 form의 validation 체크를 통해 validation-type과 required 속성을 만든다.
 * @param :
 * @return :
 */
$(document).ready(function() {
	$( ".datepk" ).datep(); // 달력

	// Contents Tab On 처리
	$(".tabmenu").tabmenu();

	// 필수 체크 표시
	$("form").each(function() {
		$(this).onloadValidator(true);
	});
});

/**/
$.fn.onlySelect = function() {
	return this.each(function () {
		var $obj = $(this),
		tgt = $(this).attr("id")
		//$btn = $obj.find(".group")
		;
		//라디오 요소처럼 동작시킬 체크박스 그룹 셀렉터
		$("#"+tgt+" .group").on("click", function (){
			//var targetName = $('.group').attr("name");
			//alert(targetName);
			//클릭 이벤트 발생한 요소가 체크 상태인 경우
			if ($(this).prop('checked')) {
				//체크박스 그룹의 요소 전체를 체크 해제후 클릭한 요소 체크 상태지정
				$("#"+tgt+" .group").prop('checked', false);
				$("#"+tgt+" .group").next().removeClass("bgon");
				$(this).prop('checked', true);
				$(this).next().addClass("bgon");
			}
		});
	});
};


// Contents - Layer Test Popup
$.fn.lypop_test = function () {
	return this.each(function () {
		var $obj = $(this),
			tgt = $(this).attr("name")
		;
		$obj.on("click", function () {
			var title = $(this).attr("title")	;
			//alert(title);
			$("html").css({overflow: "hidden"});
			$("."+tgt+" .tit").html(title);
			$("."+tgt).dialog({
				modal: true,
				width: "auto",
				height: "auto",
				resizable: false,
				position: {my: "center", at: "center", of: window}
			});

			$("."+tgt+" .btn_lyclose").on("click", function () {
				$("."+tgt).prev().find(".ui-dialog-titlebar-close").trigger("click");
			});

			$("."+tgt).prev().find(".ui-dialog-titlebar-close").on("click", function () {
				$("html").css({overflow: "visible"});
			});

			$(window).resize(function() {
				$("."+tgt).dialog("option", "position", {my: "center", at: "center", of: window});
			});

		});
	});
};

// Contents - Layer Popup
$.fn.lypop = function () {
	return this.each(function () {
		var $obj = $(this),

			tgt = $(this).attr("name");
		;
		$obj.on("click", function () {
			$("."+tgt).dialog({
				modal: true,
				width: 750,
				height: 600,
				resizable: false,
				position: {my: "center", at: "center", of: window}
			});
			$("."+tgt+" .btn_lyclose").on("click", function () {
				$("."+tgt).prev().find(".ui-dialog-titlebar-close").trigger("click");
			});
			$(window).resize(function() {
				$("."+tgt).dialog("option", "position", {my: "center", at: "center", of: window});
			});
		});
	});
};


// Contents - Layer Popup
$.fn.lypop01 = function () {
	return this.each(function () {
		var $obj = $(this),

			tgt = $(this).attr("name");
		;
		$obj.on("click", function () {
			$("."+tgt).dialog({
				modal: true,
				width: 600,
				height: 400,
				resizable: false,
				position: {my: "center", at: "center", of: window}
			});
			$("."+tgt+" .btn_lyclose").on("click", function () {
				$("."+tgt).prev().find(".ui-dialog-titlebar-close").trigger("click");
			});
			$(window).resize(function() {
				$("."+tgt).dialog("option", "position", {my: "center", at: "center", of: window});
			});
		});
	});
};



// Contents - Layer Popup (교육체계도 팝업)
$.fn.lypop02 = function () {
	return this.each(function () {
		var $obj = $(this),

			tgt = $(this).attr("name"),
			idx = 0
		;
		$obj.on("click", function () {
			idx = $(this).index();
			$("."+tgt).dialog({
				modal: true,
				width: 500,
				height: 400,
				resizable: false,
				position: {my: "center", at: "center", of: window}
			});
			$("."+tgt+" .btn_lyclose").on("click", function () {
				$("."+tgt).prev().find(".ui-dialog-titlebar-close").trigger("click");
			});
			$(window).resize(function() {
				$("."+tgt).dialog("option", "position", {my: "center", at: "center", of: window});
			});
			$("."+tgt+" .eduList").scrollLeft(idx * 471);
		});
	});
};

// Contents - Layer Popup (교육체계도 팝업)
$.fn.lypopAlert = function () {
	return this.each(function () {
		var $obj = $(this),

			tgt = $(this).attr("name"),
			idx = 0
		;
		$obj.on("click", function () {
			idx = $(this).index();
			$("."+tgt).dialog({
				modal: true,
				width: 400,
				height: 250,
				resizable: false,
				position: {my: "center", at: "center", of: window}
			});
			$("."+tgt+" .btn_lyclose").on("click", function () {
				$("."+tgt).prev().find(".ui-dialog-titlebar-close").trigger("click");
			});
			$(window).resize(function() {
				$("."+tgt).dialog("option", "position", {my: "center", at: "center", of: window});
			});
			$("."+tgt+" .eduList").scrollLeft(idx * 471);
		});
	});
};

// Contents - Layer Popup
$.fn.lypopWide = function () {
	return this.each(function () {
		var $obj = $(this),

			tgt = $(this).attr("name");
		;
		$obj.on("click", function () {
			$("."+tgt).dialog({
				modal: true,
				width: 1000,
				height: 600,
				resizable: false,
				position: {my: "center", at: "center", of: window}
			});
			$("."+tgt+" .btn_lyclose").on("click", function () {
				$("."+tgt).prev().find(".ui-dialog-titlebar-close").trigger("click");
			});
			$(window).resize(function() {
				$("."+tgt).dialog("option", "position", {my: "center", at: "center", of: window});
			});
		});
	});
};
/*
$(function() {
	$( "#datepicker, #datepicker1" ).datepicker({
	  showOn: "button",
	  buttonImage: "/img/ui/ui_calendar.gif",
	  buttonImageOnly: true,
	  buttonText: "Select date"
	});
});
*/
// Contents - File Upload
$.fn.fileup = function () {
	var $obj = $(this);
	var $add = $obj.find("label");
	var $fileNM = $obj.find(".addFileNM");
	var $fileSel = $obj.find("#addFile");
	$fileSel.on("change", function () {
		$fileNM.text($(this).val().replace(/C:\\fakepath\\/i, ''));
	});
};

// Board - Table All Check
$.fn.allChk = function () {
	return this.each(function () {
		var $obj = $(this);

		$obj.find("thead th:eq(0) input[type='checkbox']").on("click", function () {
			if ($(this).is(":checked") == true) {
				$obj.find("tbody tr").each(function () {
					if ($("td:eq(0) input[type='checkbox']", this).is(":checked") == false) {
						$("td:eq(0) input[type='checkbox']", this).trigger("click");
						$("td:eq(0) input[type='checkbox']", this).attr('checked', true);
					}
				});
			} else if ($(this).is(":checked") == false) {
				$obj.find("tbody tr").each(function () {
					if ($("td:eq(0) input[type='checkbox']", this).is(":checked") == true) {
						$("td:eq(0) input[type='checkbox']", this).trigger("click");
						$("td:eq(0) input[type='checkbox']", this).removeAttr('checked');
					};
				});
			}
		});
	});
};

// board - ul All Check
$.fn.liallChk = function () {
	return this.each(function () {
		var $obj = $(this);

		$obj.find(".conts_summery:eq(0) input[type='checkbox']").on("click", function () {
			if ($(this).is(":checked") == true) {
				$obj.find(".contentThumb_list .bdL").each(function () {
					if ($(".thumb:eq(0) input[type='checkbox']", this).is(":checked") == false) {
						$(".thumb:eq(0) input[type='checkbox']", this).trigger("click");
						$(".thumb:eq(0) input[type='checkbox']", this).attr('checked', true);
					}
				});
			} else if ($(this).is(":checked") == false) {
				$obj.find(".contentThumb_list .bdL").each(function () {
					if ($(".thumb:eq(0) input[type='checkbox']", this).is(":checked") == true) {
						$(".thumb:eq(0) input[type='checkbox']", this).trigger("click");
						$(".thumb:eq(0) input[type='checkbox']", this).removeAttr('checked');
					};
				});
			}
		});
	});
};

// Contents - Date Picker
$.fn.datep = function () {
	var $obj = $(this);

	$obj.datepicker({
		showOn: "button",
		dateFormat: 'yy.mm.dd',
		buttonImage: documentHome + "/resources/template/web/images/icon/icon_calendar.png",
		buttonImageOnly: true,
		dayNamesMin: [ $.message.get('message_new_M0003397'),$.message.get('message_new_M0003398'),$.message.get('message_new_M0003399'),$.message.get('message_new_M0003400'),$.message.get('message_new_M0003401'),$.message.get('message_new_M0003402'),$.message.get('message_new_M0003403') ],
		showMonthAfterYear: true,
		showButtonPanel: true,
		currentText: $.message.get('message_new_M0002304'),
		closeText: $.message.get('message_new_init'),
		monthNames: [ ".01", ".02", ".03", ".04", ".05", ".06", ".07", ".08", ".09", ".10", ".11", ".12" ],
		monthNamesShort: [ ".01", ".02", ".03", ".04", ".05", ".06", ".07", ".08", ".09", ".10", ".11", ".12" ],
		yearSuffix: $.message.get('message_new_M0001945'),
		onSelect : function(selectDate, inst) {
			var toDate = $(this).attr("data-to_date");
			var fromDate = $(this).attr("data-from_date");
			var eventChkYn = $(this).attr("eventChkYn"); //--> 이 변수는 과정차수 등록시 (일반차수,CP차수,공모차수) 에만 사용되어야 한다. 그렇지 않으면 오류가 난다.
			
			if (toDate) {
				var value = $("#" + toDate).val();
				if (value != "") {
					selectDate = selectDate.replace(/\./gi, '');
					value = value.replace(/\./gi, '');
					if (selectDate > value) {
						$.message.alert('message_g290');
						$(this).val("");
				//		$(this).datepicker("show");
						return false;
					}else{
						if(eventChkYn) fn_OnChangeFromDt(selectDate, this);
					}
				}else{
					if(eventChkYn) fn_OnChangeFromDt(selectDate, this);
				}
			}

			if (fromDate) {
				var value = $("#" + fromDate).val();
				if (value != "") {
					selectDate = selectDate.replace(/\./gi, '');
					value = value.replace(/\./gi, '');
					if (selectDate < value) {
						$.message.alert('message_g291');
						$(this).val("");
				//		$(this).datepicker("show");
						return false;
					}else{
						if(eventChkYn) fn_OnChangeToDt(selectDate, this);
					}
				}else{
					if(eventChkYn) fn_OnChangeToDt(selectDate, this);
				}
			}
		},
		onClose: function () {
            var event = arguments.callee.caller.caller.arguments[0];
            // If "Clear" gets clicked, then really clear it
            if ($(event.delegateTarget).hasClass('ui-datepicker-close')) {
                $(this).val('');
            }
        }
	});
//	$obj.attr("readonly", "readonly");
	$(".ui-datepicker-trigger").css("cursor", "pointer");

//	$obj.formatter({
//		 'pattern': '{{9999}}-{{99}}-{{99}}'
//	});
//	$obj.attr("data-value", $(this).val() || "");
//
//	$obj.bind("blur", function() {
//		var value = $(this).val();
//		if (value != "") {
//			if (value.length != 10) {
//				alert("날짜 형식이 맞지 않습니다.\n날짜 형식은 2000-01-01 입니다.");
//				$(this).val($(this).attr("data-value"));
//			}
//			console.log(value);
//		}
//	});
};

$.fn.onLoadThumb = function () {
    return this.each(function() {
        var $imgWidth = $(this).width();
		var $imgHeight = $(this).height();
        if ($imgWidth >= $imgHeight) {
            $(this).removeClass("imgMaxHeight").addClass("imgMaxWidth");
        }
		if ($imgHeight > $imgWidth) {
            $(this).removeClass("imgMaxWidth").addClass("imgMaxHeight");
        }
    });
};

var isEmail = function(email) {	// 이메일 체크
	if($.trim(email) == ''){
		return true;
	}
	return /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i.test(email);
};

//업로드 확장자 체크
var chkFileImg = function(obj, options){
	var chkData = {
			chkFile : "gif,png,jpg,jpeg"
			, maxSize : 10485760
	};
	var opts = $.extend({},chkData, options);

	var bChk = true;
	$("[name=" + obj +"]").each(function(){
		if($.trim($(this).val()).length > 0){
			var ext = $(this).val().split('.').pop().toLowerCase();
			if(opts.chkFile.toLowerCase().indexOf(ext) == -1) {
				alert(opts.chkFile + $.message.get('message_new_M0003241'));
				bChk =  false;
			}
			var bError = false;
			var	fileSize = null;
			/*
			try{
				if(this.files[0].size > opts.maxSize){
					fileSize = this.files[0].size / opts.maxSize;
					bError = true;
				}
			} catch(e){
				var f = document.getElementById($(this).attr("id")).value;
				if(f){
					var myFSO = new ActiveXObject("Scripting.FileSystemObject");
					var thefile = myFSO.getFile(f);
					if(thefile.size > opts.maxSize){
						fileSize = thefile.size / opts.maxSize;
						bError = true;
					}
					bError = true;
				}
			}

			if(bError){
				var size = fileSize.toString().split('.');
				var size2 = "";
				if(size[1] != null){
					size2 = size[1].substring(0, 3);
					alert("업로드 불가능 파일크기 " + size[0] + "." + size2 + " MB");
				}
				$(this).val("");
				$("#fileNM").html("");
				bChk =  false;
			}
			*/
		}
	});

	return bChk;
};

//Common - Tab
$.fn.tabmenu = function () {
	return this.each(function () {
		var $obj = $(this),
			$menu = $obj.find("button"),
			$con = $obj.next(".tabConWrap").find(".tabCon"),
			idx = 0;

		$menu.on("click", function() {
			$menu.parent().removeClass("on");
			$(this).parent().addClass("on");
			idx = $(this).parent().index();
			$con.removeClass("on");
			$con.eq(idx).addClass("on");
			return false;
		});
	});
};

//Common - Tab
gridSelect = function (objId, objData, chkValue, extVal) {
	var HTML = "<option value='__OBJ_CODE__' __CHECKED__>__OBJ_NAME__</option>";
	var tmpHtml = "";
	var realHtml = "";

	var sStudyType = objData;
	var arrStudyType = sStudyType.split(',');
	var arrStudyTypeVal = null;
	var sDefaultIdx = 0;
	var arrExt = null;

	for(var i = 0; i < arrStudyType.length; i++){
		arrStudyTypeVal = arrStudyType[i].split('|');
		if(extVal){
			arrExt = extVal.split('|');
			if(arrExt[i] != "Y"){
				continue;
			}
		}
		tmpHtml = HTML;
		tmpHtml = tmpHtml.replace(/__OBJ_CODE__/g, arrStudyTypeVal[0]);
		tmpHtml = tmpHtml.replace(/__OBJ_NAME__/g, arrStudyTypeVal[1]);

		if(arrStudyTypeVal[0] == chkValue || (i == sDefaultIdx && chkValue == "")){
			tmpHtml = tmpHtml.replace(/__CHECKED__/g, " selected");
		} else {
			tmpHtml = tmpHtml.replace(/__CHECKED__/g, " ");
		}

		realHtml += tmpHtml;
	}

	HTML = "<select id='" + objId + "'>" + realHtml + "</select>";
	return HTML;
};

$.parseInt = function(obj){
	if(typeof obj == "undefined"){
		return 0;
	} else if(obj.length == 0){
		return 0;
	} else {
		return parseInt(obj);
	}
}

// 과정 분류 1차 선택시(Custom Tag에서 자동 호출)
setCourseCateSub = function(tVal, tObj, selected){
	if(tVal != ""){
		var options = {
				url : contextPath + "/admin/course/ajax/courseCategorySubList.do",
				data : {
					parentCourseCateCode : tVal
				},
				success : function(data){
					var HTML = "<option value='__OBJ_CODE__' __SELECTED__>__OBJ_NAME__</option>";
					var tmpHtml = "";
					var realHtml = "<option value=''>"+ $("#searchCourseCategorySub option:eq(0)").html() + "</option>";
					var objList = data.data;
					var tmpSelected = "";
					for(var i = 0; i < objList.length; i++){
						tmpSelected = "";
						tmpHtml = HTML;
						tmpHtml = tmpHtml.replace(/__OBJ_CODE__/g, objList[i].courseCateCode);
						tmpHtml = tmpHtml.replace(/__OBJ_NAME__/g, objList[i].courseCateName);
						if(typeof selected != "undefined" && objList[i].courseCateCode == selected){
							tmpSelected = "selected";
						}
						tmpHtml = tmpHtml.replace(/__SELECTED__/g, tmpSelected);

						realHtml += tmpHtml;
					}
					$("#" + tObj + " option").remove();
					$("#" + tObj).append(realHtml);
				}
		}
		common.ajaxCall(options);
	} else {
		var realHtml = "<option value=''>"+ $("#searchCourseCategorySub option:eq(0)").html() + "</option>";
		$("#" + tObj + " option").remove();
		$("#" + tObj).append(realHtml);
	}
}
// 컨텐츠 분류 1차 선택시(Custom Tag에서 자동 호출)
setContentCateSub = function(tVal, tObj, selected){
	if(tVal != ""){
		var options = {
				url : contextPath + "/admin/content/ajax/contentCategorySubList.do",
				data : {
					parentCtntCateCode : tVal
				},
				success : function(data){
					var HTML = "<option value='__OBJ_CODE__' __SELECTED__>__OBJ_NAME__</option>";
					var tmpHtml = "";
					var realHtml = "<option value=''>"+ $("#searchContentCategorySub option:eq(0)").html() + "</option>";
					var objList = data.data;
					var tmpSelected = "";
					for(var i = 0; i < objList.length; i++){
						tmpSelected = "";
						tmpHtml = HTML;
						tmpHtml = tmpHtml.replace(/__OBJ_CODE__/g, objList[i].ctntCateCode);
						tmpHtml = tmpHtml.replace(/__OBJ_NAME__/g, objList[i].ctntCateName);
						if(typeof selected != "undefined" && objList[i].ctntCateCode == selected){
							tmpSelected = "selected";
						}
						tmpHtml = tmpHtml.replace(/__SELECTED__/g, tmpSelected);

						realHtml += tmpHtml;
					}
					$("#" + tObj + " option").remove();
					$("#" + tObj).append(realHtml);
				}
		}
		common.ajaxCall(options);
	} else {
		var realHtml = "<option value=''>"+ $("#searchContentCategorySub option:eq(0)").html() + "</option>";
		$("#" + tObj + " option").remove();
		$("#" + tObj).append(realHtml);
	}
}

// Custom Checkbox SelectAll
setCustomCheckBoxAll = function(gubun, tObj){
	if(gubun == "ALL"){
		if($("[name=" + tObj + "]:eq(0)").prop("checked")){
			$("[name=" + tObj + "]").prop("checked", true);
		} else {
			$("[name=" + tObj + "]").prop("checked", false);
		}
	} else {
		$("[name=" + tObj + "]:eq(0)").prop("checked", false);
	}
}